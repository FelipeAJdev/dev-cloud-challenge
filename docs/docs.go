// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "swagger": "2.0",
    "info": {
        "description": "Esta é a documentação da API de Gestão de Alunos, que permite gerenciar as informações dos alunos, incluindo criação, atualização, consulta e exclusão de registros.\n\n",
        "title": "API de Gestão de Alunos",
        "contact": {
            "name": "Follow me on Github",
            "url": "https://github.com/FelipeAJdev"
        },
        "version": "2.0",
        "license": {
            "name": "Linkedin - Felipe Macedo",
            "url": "https://www.linkedin.com/in/felipemacedo1/"
        }
    },
    "host": "dev-cloud-challenge-b3f5485f2dcf.herokuapp.com",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/alunos": {
            "get": {
                "tags": [
                    "Alunos"
                ],
                "summary": "Retorna a lista de alunos",
                "description": "Obtém a lista de TODOS os alunos cadastrados no sistema",
                "operationId": "getAlunos",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de alunos retornada com sucesso",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Aluno"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Alunos"
                ],
                "summary": "Cria um novo aluno",
                "description": "Adiciona um novo aluno ao sistema",
                "operationId": "addAluno",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "aluno",
                        "in": "body",
                        "description": "Dados do Aluno",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Aluno"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Aluno criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Aluno"
                        }
                    },
                    "400": {
                        "description": "Dados do aluno inválidos",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alunos/{id}": {
            "get": {
                "tags": [
                    "Alunos"
                ],
                "summary": "Retorna um aluno pelo ID",
                "description": "Obtém os dados de um aluno específico pelo ID",
                "operationId": "getAlunoById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Aluno",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do Aluno retornados com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Aluno"
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Aluno não encontrado",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Alunos"
                ],
                "summary": "Atualiza os dados de um aluno",
                "description": "Atualiza as informações de um aluno específico pelo ID",
                "operationId": "updateAluno",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Aluno",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "aluno",
                        "in": "body",
                        "description": "Dados do Aluno a serem atualizados",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Aluno"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aluno atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/Aluno"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos ou ID inválido",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Aluno não encontrado",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Alunos"
                ],
                "summary": "Deleta um aluno pelo ID",
                "description": "Remove um aluno específico pelo ID",
                "operationId": "deleteAluno",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Aluno",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Aluno deletado com sucesso"
                    },
                    "404": {
                        "description": "Aluno não encontrado",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Aluno": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "idade": {
                    "type": "integer"
                },
                "nome_professor": {
                    "type": "string"
                },
                "nota_primeiro_semestre": {
                    "type": "number"
                },
                "nota_segundo_semestre": {
                    "type": "number"
                },
                "numero_sala": {
                    "type": "integer"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0",
	Host:             "dev-cloud-challenge-b3f5485f2dcf.herokuapp.com",
	BasePath:         "/",
	Schemes:          []string{"https"},
	Title:            "API de Gestão de Alunos",
    Description:      "Esta é a documentação da API de Gestão de Alunos, que permite gerenciar as informações dos alunos, incluindo criação, atualização, consulta e exclusão de registros.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
